// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DataObjects.Configuration
{
    using DataObjects.Context;
    using DataObjects.Entities;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.19.3.0")]
    public class trCinCoutConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<trCinCout>
    {
        public trCinCoutConfiguration()
            : this("dbo")
        {
        }

        public trCinCoutConfiguration(string schema)
        {
            ToTable(schema + ".trCinCout");
            HasKey(x => x.CinCoutID);

            Property(x => x.CinCoutID).HasColumnName(@"CinCoutID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RefCinCout).HasColumnName(@"RefCinCout").IsRequired().IsFixedLength().HasColumnType("timestamp").HasMaxLength(8).IsRowVersion().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);
            Property(x => x.PersonBOID).HasColumnName(@"PersonBOID").IsRequired().HasColumnType("int");
            Property(x => x.TimeStatus).HasColumnName(@"TimeStatus").IsRequired().HasColumnType("datetime");
            Property(x => x.TypeStatusInOut).HasColumnName(@"TypeStatusInOut").IsRequired().HasColumnType("int");
            Property(x => x.LocBoID).HasColumnName(@"LocBoID").IsRequired().HasColumnType("int");

            HasRequired(a => a.strLocBO).WithMany(b => b.trCinCouts).HasForeignKey(c => c.LocBoID);
            HasRequired(a => a.tTypeStatusCinCout).WithMany(b => b.trCinCouts).HasForeignKey(c => c.TypeStatusInOut);
            HasRequired(a => a.tUserBackOffice).WithMany(b => b.trCinCouts).HasForeignKey(c => c.PersonBOID);
        }
    }

}
// </auto-generated>
