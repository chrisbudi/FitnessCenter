// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DataObjects.Configuration
{
    using DataObjects.Context;
    using DataObjects.Entities;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.19.3.0")]
    public class strAktivitasSaleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<strAktivitasSale>
    {
        public strAktivitasSaleConfiguration()
            : this("dbo")
        {
        }

        public strAktivitasSaleConfiguration(string schema)
        {
            ToTable(schema + ".strAktivitasSales");
            HasKey(x => x.AktivitasSalesID);

            Property(x => x.AktivitasSalesID).HasColumnName(@"AktivitasSalesID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.trMembershipID).HasColumnName(@"trMembershipID").IsRequired().HasColumnType("int");
            Property(x => x.SalesActionID).HasColumnName(@"SalesActionID").IsRequired().HasColumnType("int");
            Property(x => x.MemberStateID).HasColumnName(@"MemberStateID").IsRequired().HasColumnType("int");
            Property(x => x.Note).HasColumnName(@"Note").IsOptional().HasColumnType("nvarchar");
            Property(x => x.date).HasColumnName(@"date").IsOptional().HasColumnType("date");
            Property(x => x.aktivitasstap).HasColumnName(@"aktivitasstap").IsOptional().HasColumnType("timestamp").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Computed);

            HasRequired(a => a.tMemberState).WithMany(b => b.strAktivitasSales).HasForeignKey(c => c.MemberStateID);
            HasRequired(a => a.trMembership).WithMany(b => b.strAktivitasSales).HasForeignKey(c => c.trMembershipID);
            HasRequired(a => a.tSalesAction).WithMany(b => b.strAktivitasSales).HasForeignKey(c => c.SalesActionID);
        }
    }

}
// </auto-generated>
