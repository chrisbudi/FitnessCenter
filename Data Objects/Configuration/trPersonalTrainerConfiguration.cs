// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DataObjects.Configuration
{
    using DataObjects.Context;
    using DataObjects.Entities;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.19.3.0")]
    public class trPersonalTrainerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<trPersonalTrainer>
    {
        public trPersonalTrainerConfiguration()
            : this("dbo")
        {
        }

        public trPersonalTrainerConfiguration(string schema)
        {
            ToTable(schema + ".trPersonalTrainer");
            HasKey(x => x.trPersonalTrainerID);

            Property(x => x.trPersonalTrainerID).HasColumnName(@"trPersonalTrainerID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.tPaketPTID).HasColumnName(@"tPaketPTID").IsRequired().HasColumnType("int");
            Property(x => x.SisaJam).HasColumnName(@"SisaJam").IsOptional().HasColumnType("int");
            Property(x => x.PersonBOIDPT).HasColumnName(@"PersonBOIDPT").IsOptional().HasColumnType("int");
            Property(x => x.seq).HasColumnName(@"seq").IsRequired().HasColumnType("int");
            Property(x => x.ParentID).HasColumnName(@"ParentID").IsOptional().HasColumnType("int");
            Property(x => x.Masa).HasColumnName(@"Masa").IsOptional().HasColumnType("int");
            Property(x => x.trMembershipID).HasColumnName(@"trMembershipID").IsOptional().HasColumnType("int");

            HasOptional(a => a.trMembership).WithMany(b => b.trPersonalTrainers).HasForeignKey(c => c.trMembershipID);
            HasOptional(a => a.trPersonalTrainer_ParentID).WithMany(b => b.trPersonalTrainers).HasForeignKey(c => c.ParentID);
            HasOptional(a => a.tUserBackOffice).WithMany(b => b.trPersonalTrainers).HasForeignKey(c => c.PersonBOIDPT);
            HasRequired(a => a.tPaketPT).WithMany(b => b.trPersonalTrainers).HasForeignKey(c => c.tPaketPTID);
        }
    }

}
// </auto-generated>
