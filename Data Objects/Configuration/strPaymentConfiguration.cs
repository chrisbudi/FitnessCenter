// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DataObjects.Configuration
{
    using DataObjects.Context;
    using DataObjects.Entities;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.19.3.0")]
    public class strPaymentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<strPayment>
    {
        public strPaymentConfiguration()
            : this("dbo")
        {
        }

        public strPaymentConfiguration(string schema)
        {
            ToTable(schema + ".strPayment");
            HasKey(x => x.StrPaymentID);

            Property(x => x.StrPaymentID).HasColumnName(@"StrPaymentID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PaymentWithID).HasColumnName(@"PaymentWithID").IsRequired().HasColumnType("int");
            Property(x => x.trPaymentID).HasColumnName(@"trPaymentID").IsRequired().HasColumnType("int");

            HasRequired(a => a.strPaymentMember).WithMany(b => b.strPayments).HasForeignKey(c => c.trPaymentID);
            HasRequired(a => a.trPaymentWith).WithMany(b => b.strPayments).HasForeignKey(c => c.PaymentWithID);
        }
    }

}
// </auto-generated>
