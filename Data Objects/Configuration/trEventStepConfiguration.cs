// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DataObjects.Configuration
{
    using DataObjects.Context;
    using DataObjects.Entities;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.19.3.0")]
    public class trEventStepConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<trEventStep>
    {
        public trEventStepConfiguration()
            : this("dbo")
        {
        }

        public trEventStepConfiguration(string schema)
        {
            ToTable(schema + ".trEventStep");
            HasKey(x => x.trEventStepId);

            Property(x => x.trEventStepId).HasColumnName(@"trEventStepId").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PersonEventId).HasColumnName(@"PersonEventId").IsRequired().HasColumnType("int");
            Property(x => x.EvStepId).HasColumnName(@"EvStepId").IsOptional().HasColumnType("int");
            Property(x => x.TotalScore).HasColumnName(@"TotalScore").IsOptional().HasColumnType("int");

            HasOptional(a => a.tEventStep).WithMany(b => b.trEventSteps).HasForeignKey(c => c.EvStepId);
            HasRequired(a => a.trPersonEvent).WithMany(b => b.trEventSteps).HasForeignKey(c => c.PersonEventId);
        }
    }

}
// </auto-generated>
