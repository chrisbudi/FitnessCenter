// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace DataObjects.Configuration
{
    using DataObjects.Context;
    using DataObjects.Entities;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.19.3.0")]
    public class trPlanKelaConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<trPlanKela>
    {
        public trPlanKelaConfiguration()
            : this("dbo")
        {
        }

        public trPlanKelaConfiguration(string schema)
        {
            ToTable(schema + ".trPlanKelas");
            HasKey(x => x.PlanKelasID);

            Property(x => x.PlanKelasID).HasColumnName(@"PlanKelasID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.KelasID).HasColumnName(@"KelasID").IsRequired().HasColumnType("int");
            Property(x => x.PersonBOIDInstruktur).HasColumnName(@"PersonBOIDInstruktur").IsRequired().HasColumnType("int");
            Property(x => x.PersonBOIDAdm).HasColumnName(@"PersonBOIDAdm").IsRequired().HasColumnType("int");
            Property(x => x.DayOfWeek).HasColumnName(@"DayOfWeek").IsRequired().HasColumnType("int");
            Property(x => x.period).HasColumnName(@"period").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.WaktuMulai).HasColumnName(@"WaktuMulai").IsRequired().HasColumnType("time");
            Property(x => x.WaktuSelesai).HasColumnName(@"WaktuSelesai").IsRequired().HasColumnType("time");
            Property(x => x.LocationID).HasColumnName(@"LocationID").IsRequired().HasColumnType("int");

            HasRequired(a => a.tKela).WithMany(b => b.trPlanKelas).HasForeignKey(c => c.KelasID);
            HasRequired(a => a.tLocFitnessCenter).WithMany(b => b.trPlanKelas).HasForeignKey(c => c.LocationID);
            HasRequired(a => a.tUserBackOffice_PersonBOIDAdm).WithMany(b => b.trPlanKelas_PersonBOIDAdm).HasForeignKey(c => c.PersonBOIDAdm);
            HasRequired(a => a.tUserBackOffice_PersonBOIDInstruktur).WithMany(b => b.trPlanKelas_PersonBOIDInstruktur).HasForeignKey(c => c.PersonBOIDInstruktur);
        }
    }

}
// </auto-generated>
