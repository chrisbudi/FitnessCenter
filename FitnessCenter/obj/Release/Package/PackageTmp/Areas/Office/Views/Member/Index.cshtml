@{
    ViewBag.Title = "Member Index";
}

<!-- BEGIN PAGE HEADER-->

<div class="page-head">
    <!-- BEGIN PAGE TITLE -->
    <div class="page-title">
        <h1>
            Master <small>Member</small>
        </h1>
    </div>
</div>

@Html.Partial("_pageBreadcrumbs")
<!-- END PAGE HEADER-->
<!-- BEGIN PAGE CONTENT-->
<div class="portlet light">
    <div class="portlet-body">
        <div class="row margin-bottom-20">
            <div class="col-md-12">
                <table class="table table-striped table-bordered table-hover" id="member">
                    <thead>
                        <tr role="row" class="heading">
                            <th width="1%">
                                No
                            </th>
                            <th>
                                ID Member
                            </th>
                            <th>
                                Nama
                            </th>
                            <th>
                                Alamat
                            </th>
                            <th>
                                Kota
                            </th>
                            <th>
                                Tgl Lahir
                            </th>
                            <th>
                                Gender
                            </th>
                            <th>
                                Status
                            </th>
                            <th>
                                ActCode
                            </th>
                            <th>
                                Actions
                            </th>
                        </tr>
                        <tr role="row" class="filter">
                            <td></td>
                            <td>
                                <input type="text" class="form-control form-filter input-sm" name="columns[1]FilterSearch">
                            </td>
                            <td>
                                <input type="text" class="form-control form-filter input-sm" name="columns[2]FilterSearch">
                            </td>
                            <td>
                                <input type="text" class="form-control form-filter input-sm" name="columns[3]FilterSearch">
                            </td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>
                                <div class="margin-bottom-5">
                                    <button class="btn btn-sm yellow filter-submit margin-bottom"><i class="fa fa-search"></i>Search</button>
                                </div>
                                <button class="btn btn-sm red filter-cancel"><i class="fa fa-times"></i>Reset</button>
                            </td>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- END PAGE CONTENT-->
@section Scripts {

@Scripts.Render("~/bundle/script/datatable")
    <script>
        $(function () {
            //Metronic.init(); // init metronic core components
            //Layout.init(); // init current layout

            @*var table = $('#member');
            // begin first table
            table.DataTable({
                "serverSide": true,
                "processing": true,
                "ajax": "@Url.Action("MemberResult", "Member")",
                "deferRender": true,
                "columns": [
                    { "mdata": "No", "width": "3%" },
                    { "mdata": "MemberID" },
                    { "mdata": "PAlamat" },
                    { "mdata": "PKota" },
                    { "mdata": "tgllahir" },
                    { "mdata": "PNama" },
                    { "mdata": "PGender" },
                    {
                        "mdata": "MMulai"
                    },
                    {
                        "data": 8,
                        "render": function (data, type, full) {
                            var d = data;
                            return "<a href='@Url.Action("EditMember", "Member")/" + d + "'><i class='fa fa-pencil-square fa-2x font-blue-soft'></i></a>";
                        },
                        "orderable": false,
                        "width": "3%"
                    }
                ]
            });*@

            var grid = new Datatable();

            grid.init({
                src: $("#member"),
                onSuccess: function (grid) {
                    //alert('sucsess');
                },
                onError: function (grid) {
                    //alert('fail');
                },
                loadingMessage: 'Loading...',
                dataTable: {
                    // here you can define a typical datatable settings from https://datatables.net/usage/options

                    // Uncomment below line("dom" parameter) to fix the dropdown overflow issue in the datatable cells. The default datatable layout
                    // setup uses scrollable div(table-scrollable) with overflow:auto to enable vertical scroll(see: assets/global/scripts/datatable.js).
                    // So when dropdowns used the scrollable div should be removed.
                    //"dom": "<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'<'table-group-actions pull-right'>>r>t<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'>>",
                    "lengthMenu": [
                        [10, 20, 50, 100, 150],
                        [10, 20, 50, 100, 150] // change per page values here
                    ],
                    "pageLength": 10, // default record count per page
                    "ajax": {
                        "url": "@Url.Action("MemberResult", "Member")", // ajax source
                    },
                    "columns": [
                        { "name": "No" },
                        { "name": "MemberNO" },
                        { "name": "tPerson.PNama" },
                        { "name": "tPerson.PAlamat" },
                        { "name": "tPerson.PKota" },
                        { "name": "tPerson.tgllahir" },
                        { "name": "tPerson.PGender" },
                        { "name": "MMulai" },
                        { "name": "ActivationCode" },
                        {
                            "data": 9,
                            "render": function (data) {
                                var d = data;
                                return "<a href='@Url.Action("EditMember", "Member")/" + d + "'><i class='fa fa-pencil'></i> Member</a>";
                            },
                            "orderable": false,
                            "width": "5%"
                        }
                    ],
                    "order": [
                        [1, "asc"]
                    ] // set first column as a default sort by asc
                }
            });


            // handle group actionsubmit button click
            grid.getTableWrapper().on('click', '.table-group-action-submit', function (e) {
                e.preventDefault();
                var action = $(".table-group-action-input", grid.getTableWrapper());
                if (action.val() != "" && grid.getSelectedRowsCount() > 0) {
                    grid.setAjaxParam("customActionType", "group_action");
                    grid.setAjaxParam("customActionName", action.val());
                    grid.setAjaxParam("id", grid.getSelectedRows());
                    grid.getDataTable().ajax.reload();
                    grid.clearAjaxParams();
                } else if (action.val() == "") {
                    Metronic.alert({
                        type: 'danger',
                        icon: 'warning',
                        message: 'Please select an action',
                        container: grid.getTableWrapper(),
                        place: 'prepend'
                    });
                } else if (grid.getSelectedRowsCount() === 0) {
                    Metronic.alert({
                        type: 'danger',
                        icon: 'warning',
                        message: 'No record selected',
                        container: grid.getTableWrapper(),
                        place: 'prepend'
                    });
                }
            });


        });
    </script>
}